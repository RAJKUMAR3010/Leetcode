class Solution {
    public int combinationSum4(int[] nums, int target) {
        
        int index = 0;
        int[][]  dp = new int[nums.length][target + 1];
        
        for (int[] Dp : dp) {
            Arrays.fill(Dp, -1);
        }
        
        return f (nums, target, index, dp);
    }
    static int f (int[] nums, int target, int index, int[][] dp) {

        // at any time target 0, then return 1;
        if (target == 0) {
            return 1;
        }

        if (dp[index][target] != -1) {
            return dp[index][target];
        }

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            if (target >= nums[i]) {
                count = count + f(nums, target - nums[i], index, dp);
            }
        }

        dp[index][target] = count;
        return dp[index][target];
    }
}
